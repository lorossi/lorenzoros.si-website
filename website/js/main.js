function shuffle(a) {
  for (let i = a.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [a[i], a[j]] = [a[j], a[i]];
  }
  return a;
}

function randomBetween(min = 0, max = 1) {
  return Math.random() * (max - min) + min;
}

function randomInt(min, max) {
  return Math.floor(Math.random() * (max - min) + min);
}

function rotateBackground() {
  console.log("angle", angle);
  $(".background").css({
    "background-image": `linear-gradient(${angle}deg, ${gradient[0]}, ${gradient[1]})`
  });
  angle += 3.6;
}

function selectColors() {
  gradient = colors[Math.floor(Math.random() * colors.length)];
}

function setTextColor(icons_obj, background_obj, color_switch_obj, color_mode) {
  if (color_mode) {
    if (gradient[2]) {
      $("body").css({
        "color": dark_color, // dark
        "filter": "none"
      });

      $(icons_obj).each(function() {
        $(this).css({
          "filter": "dark_filter"
        })
      });

      $(color_switch_obj).css({
        "filter": "none"
      });

    } else {
      $("body").css({
        "color": light_color, // light
        "filter": "none"
      });

      $(icons_obj).each(function() {
        $(this).css({
          "filter": light_filter
        })
      });

      $(color_switch_obj).css({
        "filter": "none"
      });
    }
  } else {
    $("body").css({
      "background-color": dark_background,
      "color": light_text // dark
    });

    $(background_obj).css({
      "background-image": "none"
    });

    $(icons_obj).each(function() {
      $(this).css({
        "filter": light_filter
      })
    });

    $(color_switch_obj).css({
      "filter": "none"
    });
  }
}

function setProjects(projects_obj) {
  repos.forEach(function(repo, index) {
    let string;
    if (repo.language) {
      //string = `<a href="${repo.url}" target="_blank">${repo.name} - ${repo.language} - ${repo.commits} commits</a><br>`;
      string = `<a href="${repo.url}" target="_blank">${repo.name} - ${repo.language}</a><br>`;
    } else {
      //string = `<a href="${repo.url}" target="_blank">${repo.name} - ${repo.commits} commits</a><br>`;
      string = `<a href="${repo.url}" target="_blank">${repo.name}</a><br>`;
    }
    $(projects_obj).append(string);
  });
}

function setSubTitle(subtitle_obj) {
  shuffle(strings);
  if (strings[0] == $(subtitle_obj).text()) {
    random_text = strings[1];
  } else {
    random_text = strings[0];
  }

  $(subtitle_obj).text(random_text);
}

function showText(text_obj, projects_obj, icons_obj, icons_svg_obj) {
  $(text_obj).fadeIn(600, function() {
    $(projects_obj).fadeIn(600, function() {
      $(icons_obj).css({
        "display": "flex"
      })
      $(icons_svg_obj).fadeIn(600)
    })
  });
}


function moveOrbs(selector) {
  orbs.forEach(function(orb, index) {
    orb.move(mouse_coords);
  });
}


function setOrbsContainerSize(selector) {
  let width, height;
  width = $(".background").width();
  height = $(".background").height();

  if (height != $(selector).height() || width != $(selector).width()) {
    $(selector).css({
      "height": height + "px",
      "width": width + "px"
    })
  }
}


// filter generated by https://codepen.io/sosuke/pen/Pjoqqp
var light_color = "#ddd";
var dark_color = "#131516";
var dark_background = "#363538";
var light_text = "#F6F6F6";
var light_filter = "invert(94%) sepia(1%) saturate(314%) hue-rotate(86deg) brightness(111%) contrast(73%)";
var dark_filter = "invert(5%) sepia(12%) saturate(476%) hue-rotate(155deg) brightness(104%) contrast(93%)";
var bw_filter = "invert(50%) sepia(27%) saturate(725%) hue-rotate(145deg) brightness(88%) contrast(95%)";
var angle = 0;
var gradient = [];
var mouse_coords = new Vector(null, null);
var orbs = []

$(document).ready(function() {
  let name_obj = ".title #name";
  let subtitle_obj = ".title #subtitle";
  let text_obj = ".text"
  let projects_obj = ".myprojects #projects"
  let projects_link_obj = ".myprojects #projects a"
  let icons_obj = ".icons";
  let icons_svg_obj = ".icons a";
  let background_obj = ".background";
  let color_switch_obj = ".colorswitch";

  let orbs_container_obj = ".orbs";
  let orbs_generated = false;
  let max_orbs = 5;

  let color_mode = false;
  let rotate_interval;

  $('html,body').animate({
    scrollTop: 0
  }, 800);
  console.log("%c Curious about this website? Look at the repo here https://github.com/lorossi/lorenzoros.si-website", "font-size: 1.5rem;color:#ddd;background-color:#131516");

  if (color_mode) {
    selectColors(); //REACTIVATE WITH COLORS
    angle = Math.random() * 360;
    rotate_interval = setInterval(rotateBackground, 100); //REACTIVATE WITH COLORS
  }

  setTextColor(icons_svg_obj, background_obj, color_switch_obj, color_mode);
  setProjects(projects_obj);
  setOrbsContainerSize(orbs_container_obj);

  setSubTitle(subtitle_obj);

  setInterval(setSubTitle, 1000 * 15, subtitle_obj);
  setInterval(setOrbsContainerSize, 1000, orbs_container_obj);



  $(subtitle_obj).click(
    function() {
      setSubTitle(subtitle_obj);
    }
  );

  $(icons_svg_obj + ", " + projects_link_obj + ", " + color_switch_obj).mouseenter(function() {
    if (color_mode) {
      if (gradient[2]) {
        $(this).css({
          "filter": light_filter
        })
      } else {
        $(this).css({
          "filter": dark_filter
        })
      }
    } else {
      $(this).css({
        "filter": bw_filter
      })
    }
  }).mouseleave(function() {
    if (color_mode) {
      if (gradient[2]) {
        if ($(this).text() != "") {
          // we found a text div
          $(this).css({
            "filter": "none",
            "color": dark_color
        })
        } else {
          // we found an image
          $(this).css({
            "filter": dark_filter
          })
        }
      } else {
        if ($(this).text() != "") {
          // we found a text div
          $(this).css({
            "filter": "none",
            "color": light_color
        })
        } else {
          // we found an image
          $(this).css({
            "filter": light_filter
          })
        }
      }
    } else {
      if ($(this).text() != "") {
        // we found a text div
        $(this).css({
          "filter": "none",
          "color": light_text
      })
      } else {
        // we found an image
        $(this).css({
          "filter": light_filter
        })
      }
    }
  });

  $(color_switch_obj).click(function() {
    if (color_mode) {
      $(this).text("switch to colors")
      color_mode = !color_mode;
      clearInterval(rotate_interval);
      setTextColor(icons_svg_obj, background_obj, color_switch_obj, color_mode);
    } else {
      $(this).text("switch to dark mode")
      color_mode = !color_mode;
      selectColors();
      setTextColor(icons_svg_obj, background_obj, color_switch_obj, color_mode);
      angle = Math.random() * 360;
      rotate_interval = setInterval(rotateBackground, 100); //REACTIVATE WITH COLORS
    }

  })

  $(window).resize(function() {
    setOrbsContainerSize(orbs_container_obj);
  })


  $("body").mousemove(function(e) {
    if (!orbs_generated) {
      orbs_generated = true;
      let radius = 20;
      let width, height;
      width = $(".background").width();
      height = $(".background").height();

      for (let i = 0; i < max_orbs; i++) {
        let x, y;
        x = randomBetween(0, width);
        y = randomBetween(0, height);
        orb = new Orb(x, y, radius, i, orbs_container_obj);
        orbs.push(orb);
      }
      setInterval(moveOrbs, 10, orbs_container_obj);
    }
    mouse_coords.x = e.pageX;
    mouse_coords.y = e.pageY;
  });

})
